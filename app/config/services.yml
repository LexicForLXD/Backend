# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    AppBundle\Service\LxdApi\:
       resource: '../../src/AppBundle/Service/LxdApi'
       arguments:
            $cert_location: '%cert_location%'
            $cert_key_location: '%cert_key_location%'
            $cert_passphrase: '%cert_passphrase%'

    lxd.api.profile:
        class: AppBundle\Service\LxdApi\ProfileApi
        public: true
        arguments:
            $cert_location: '%cert_location%'
            $cert_key_location: '%cert_key_location%'
            $cert_passphrase: '%cert_passphrase%'

    lxd.image.creation.updater:
            class: AppBundle\EventListener\ImageCreationListener
            arguments: [ "@doctrine.orm.entity_manager" ]
            tags:
                - { name: kernel.event_listener, event: lxd.image.creation.update }

    lxd.container.creation.updater:
        class: AppBundle\EventListener\ContainerListener
        arguments: [ "@doctrine.orm.entity_manager" ]
        tags:
            - { name: kernel.event_listener, event: lxd.container.creation.update, method: onLxdContainerCreationUpdate }
            - { name: kernel.event_listener, event: lxd.container.state.update, method: onLxdContainerStateUpdate }

    platform.user.manager:
        class: Doctrine\ORM\EntityManager
        factory: ['@doctrine','getManagerForClass']
        arguments: ['AppBundle\Entity\User']
    platform.user.repository:
        class: AppBundle\Repository\UserRepository
        factory: ['@platform.user.manager','getRepository']
        arguments: ['AppBundle\Entity\User']
    platform.user.provider:
        class: AppBundle\Provider\UserProvider
        arguments: ['@platform.user.repository']

    httpful_connection_exception.listener:
        class: AppBundle\EventListener\HttpfulConnectionExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    element_not_found_exception.listener:
        class: AppBundle\EventListener\ElementNotFoundExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    wrong_input_exception.listener:
        class: AppBundle\EventListener\WrongInputExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }